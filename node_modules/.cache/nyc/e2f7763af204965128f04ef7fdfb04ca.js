var cov_m7a9ryzz9=function(){var path="/Users/jkopp/emailBeacon/app/routes/tracking_routes.js",hash="633ab037c4facb60191344d5721147310dcf0535",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/jkopp/emailBeacon/app/routes/tracking_routes.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:30}},"1":{start:{line:3,column:0},end:{line:114,column:2}},"2":{start:{line:4,column:4},end:{line:62,column:7}},"3":{start:{line:6,column:24},end:{line:6,column:41}},"4":{start:{line:7,column:23},end:{line:7,column:55}},"5":{start:{line:11,column:18},end:{line:16,column:10}},"6":{start:{line:19,column:8},end:{line:19,column:50}},"7":{start:{line:22,column:8},end:{line:22,column:36}},"8":{start:{line:25,column:8},end:{line:61,column:11}},"9":{start:{line:26,column:12},end:{line:60,column:13}},"10":{start:{line:28,column:16},end:{line:28,column:58}},"11":{start:{line:31,column:29},end:{line:31,column:61}},"12":{start:{line:32,column:16},end:{line:32,column:60}},"13":{start:{line:35,column:34},end:{line:35,column:44}},"14":{start:{line:36,column:16},end:{line:36,column:80}},"15":{start:{line:38,column:16},end:{line:55,column:17}},"16":{start:{line:40,column:20},end:{line:40,column:64}},"17":{start:{line:43,column:20},end:{line:43,column:55}},"18":{start:{line:45,column:21},end:{line:55,column:17}},"19":{start:{line:47,column:20},end:{line:47,column:67}},"20":{start:{line:50,column:20},end:{line:50,column:57}},"21":{start:{line:52,column:21},end:{line:55,column:17}},"22":{start:{line:54,column:20},end:{line:54,column:57}},"23":{start:{line:59,column:16},end:{line:59,column:83}},"24":{start:{line:64,column:4},end:{line:85,column:7}},"25":{start:{line:71,column:8},end:{line:71,column:59}},"26":{start:{line:74,column:24},end:{line:74,column:32}},"27":{start:{line:76,column:8},end:{line:76,column:43}},"28":{start:{line:79,column:8},end:{line:79,column:136}},"29":{start:{line:82,column:8},end:{line:84,column:11}},"30":{start:{line:83,column:12},end:{line:83,column:92}},"31":{start:{line:88,column:4},end:{line:103,column:7}},"32":{start:{line:89,column:24},end:{line:89,column:41}},"33":{start:{line:91,column:8},end:{line:91,column:75}},"34":{start:{line:93,column:8},end:{line:101,column:11}},"35":{start:{line:94,column:12},end:{line:100,column:13}},"36":{start:{line:95,column:16},end:{line:95,column:37}},"37":{start:{line:98,column:16},end:{line:98,column:79}},"38":{start:{line:99,column:16},end:{line:99,column:55}},"39":{start:{line:105,column:4},end:{line:108,column:7}},"40":{start:{line:106,column:8},end:{line:106,column:50}},"41":{start:{line:107,column:8},end:{line:107,column:39}},"42":{start:{line:110,column:4},end:{line:113,column:7}},"43":{start:{line:111,column:8},end:{line:111,column:53}},"44":{start:{line:112,column:8},end:{line:112,column:39}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:3,column:17},end:{line:3,column:18}},loc:{start:{line:3,column:42},end:{line:114,column:1}},line:3},"1":{name:"(anonymous_1)",decl:{start:{line:4,column:32},end:{line:4,column:33}},loc:{start:{line:4,column:61},end:{line:62,column:5}},line:4},"2":{name:"(anonymous_2)",decl:{start:{line:25,column:34},end:{line:25,column:35}},loc:{start:{line:25,column:50},end:{line:61,column:9}},line:25},"3":{name:"(anonymous_3)",decl:{start:{line:64,column:24},end:{line:64,column:25}},loc:{start:{line:64,column:53},end:{line:85,column:5}},line:64},"4":{name:"(anonymous_4)",decl:{start:{line:82,column:34},end:{line:82,column:35}},loc:{start:{line:82,column:50},end:{line:84,column:9}},line:82},"5":{name:"(anonymous_5)",decl:{start:{line:88,column:27},end:{line:88,column:28}},loc:{start:{line:88,column:56},end:{line:103,column:5}},line:88},"6":{name:"(anonymous_6)",decl:{start:{line:93,column:34},end:{line:93,column:35}},loc:{start:{line:93,column:50},end:{line:101,column:9}},line:93},"7":{name:"(anonymous_7)",decl:{start:{line:105,column:27},end:{line:105,column:28}},loc:{start:{line:105,column:40},end:{line:108,column:5}},line:105},"8":{name:"(anonymous_8)",decl:{start:{line:110,column:29},end:{line:110,column:30}},loc:{start:{line:110,column:42},end:{line:113,column:5}},line:110}},branchMap:{"0":{loc:{start:{line:26,column:12},end:{line:60,column:13}},type:"if",locations:[{start:{line:26,column:12},end:{line:60,column:13}},{start:{line:26,column:12},end:{line:60,column:13}}],line:26},"1":{loc:{start:{line:38,column:16},end:{line:55,column:17}},type:"if",locations:[{start:{line:38,column:16},end:{line:55,column:17}},{start:{line:38,column:16},end:{line:55,column:17}}],line:38},"2":{loc:{start:{line:45,column:21},end:{line:55,column:17}},type:"if",locations:[{start:{line:45,column:21},end:{line:55,column:17}},{start:{line:45,column:21},end:{line:55,column:17}}],line:45},"3":{loc:{start:{line:52,column:21},end:{line:55,column:17}},type:"if",locations:[{start:{line:52,column:21},end:{line:55,column:17}},{start:{line:52,column:21},end:{line:55,column:17}}],line:52},"4":{loc:{start:{line:94,column:12},end:{line:100,column:13}},type:"if",locations:[{start:{line:94,column:12},end:{line:100,column:13}},{start:{line:94,column:12},end:{line:100,column:13}}],line:94}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();let unique=(cov_m7a9ryzz9.s[0]++,require('uniqid'));cov_m7a9ryzz9.s[1]++;module.exports=(app,client,logger)=>{cov_m7a9ryzz9.f[0]++;cov_m7a9ryzz9.s[2]++;app.get('/:id-tracker.png',(request,response,next)=>{cov_m7a9ryzz9.f[1]++;// Set trackerID from params
let trackerId=(cov_m7a9ryzz9.s[3]++,request.params.id);let clientIp=(cov_m7a9ryzz9.s[4]++,request.connection.remoteAddress);// TODO: Retrieve TO from email headers
// Create buffer for transparent image
let buf=(cov_m7a9ryzz9.s[5]++,new Buffer.from([0x47,0x49,0x46,0x38,0x39,0x61,0x01,0x00,0x01,0x00,0x80,0x00,0x00,0xff,0xff,0xff,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x02,0x02,0x44,0x01,0x00,0x3b]));// Set content-type of response to png
cov_m7a9ryzz9.s[6]++;response.set('Content-Type','image/png');// Set end of response to the binary image
cov_m7a9ryzz9.s[7]++;response.end(buf,'binary');// Handle updating tracker's information
cov_m7a9ryzz9.s[8]++;client.hgetall(trackerId,(err,reply)=>{cov_m7a9ryzz9.f[2]++;cov_m7a9ryzz9.s[9]++;if(reply!=null){cov_m7a9ryzz9.b[0][0]++;cov_m7a9ryzz9.s[10]++;// Increment Open count regardless of status
client.hincrby(trackerId,"openCount",1);// TODO: Implement storing lists searchable by hash. For now store IPs in , delimited list
let ipList=(cov_m7a9ryzz9.s[11]++,reply.clientIps+clientIp+',');cov_m7a9ryzz9.s[12]++;client.hset(trackerId,'clientIps',ipList);// Store Last opened time
let currentTime=(cov_m7a9ryzz9.s[13]++,new Date());cov_m7a9ryzz9.s[14]++;client.hset(trackerId,'lastOpened',currentTime.toUTCString());cov_m7a9ryzz9.s[15]++;if(reply.status==="Generated"){cov_m7a9ryzz9.b[1][0]++;cov_m7a9ryzz9.s[16]++;// Set status to Opened
client.hmset(trackerId,"status","Opened");// Emit open event
cov_m7a9ryzz9.s[17]++;app.emit('event:opened',reply.id);}else{cov_m7a9ryzz9.b[1][1]++;cov_m7a9ryzz9.s[18]++;if(reply.status==="Opened"){cov_m7a9ryzz9.b[2][0]++;cov_m7a9ryzz9.s[19]++;// Set status to Re-Opened
client.hmset(trackerId,"status","Re-Opened");// Emit reopened event
cov_m7a9ryzz9.s[20]++;app.emit('event:reopened',reply.id);}else{cov_m7a9ryzz9.b[2][1]++;cov_m7a9ryzz9.s[21]++;if(reply.status==="Re-Opened"){cov_m7a9ryzz9.b[3][0]++;cov_m7a9ryzz9.s[22]++;// Emit reopened event
app.emit('event:reopened',reply.id);}else{cov_m7a9ryzz9.b[3][1]++;}}}}else{cov_m7a9ryzz9.b[0][1]++;cov_m7a9ryzz9.s[23]++;logger.errorLog.info("No data found for tracker ID: "+trackerId);}});});cov_m7a9ryzz9.s[24]++;app.get('/tracker',(request,response,next)=>{cov_m7a9ryzz9.f[3]++;cov_m7a9ryzz9.s[25]++;/*
        Create tracking id for image
        Save newly created id associate it with email from req body
        with timestamp, IP address, and status (default: opened; if opened again: re-opened)
        */response.set({"Content-Type":"application/json"});// Get unique id for tracker
let trackerId=(cov_m7a9ryzz9.s[26]++,unique());cov_m7a9ryzz9.s[27]++;client.sadd("trackers",trackerId);// TODO: Implement auth to grab client
cov_m7a9ryzz9.s[28]++;client.hmset(trackerId,"client","tests@example.com","status","Generated","openCount",0,"id",trackerId,"clientIps",[]);// Retrieve all data for the new tracker
cov_m7a9ryzz9.s[29]++;client.hgetall(trackerId,(err,reply)=>{cov_m7a9ryzz9.f[4]++;cov_m7a9ryzz9.s[30]++;response.send({imageUrl:"http://127.0.0.1:8000/"+reply.id+"-tracker.png"});});});// Check status of tracker's by id
cov_m7a9ryzz9.s[31]++;app.get('/:id/status',(request,response,next)=>{cov_m7a9ryzz9.f[5]++;let trackerId=(cov_m7a9ryzz9.s[32]++,request.params.id);cov_m7a9ryzz9.s[33]++;logger.accessLog.info("Checking status for tracker: "+trackerId);cov_m7a9ryzz9.s[34]++;client.hgetall(trackerId,(err,reply)=>{cov_m7a9ryzz9.f[6]++;cov_m7a9ryzz9.s[35]++;if(reply!=null){cov_m7a9ryzz9.b[4][0]++;cov_m7a9ryzz9.s[36]++;response.send(reply);}else{cov_m7a9ryzz9.b[4][1]++;cov_m7a9ryzz9.s[37]++;logger.errorLog.info("No tracker found with ID: "+trackerId);cov_m7a9ryzz9.s[38]++;response.status(404).send('Not found');}});});cov_m7a9ryzz9.s[39]++;app.on('event:opened',tracker=>{cov_m7a9ryzz9.f[7]++;cov_m7a9ryzz9.s[40]++;logger.accessLog.info('Email was opened');cov_m7a9ryzz9.s[41]++;logger.accessLog.info(tracker);});cov_m7a9ryzz9.s[42]++;app.on('event:reopened',tracker=>{cov_m7a9ryzz9.f[8]++;cov_m7a9ryzz9.s[43]++;logger.accessLog.info('Email was re-opened');cov_m7a9ryzz9.s[44]++;logger.accessLog.info(tracker);});};